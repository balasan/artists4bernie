{"version":3,"sources":["webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/texts/signatures.js","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/list.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/homepage.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx"],"names":["withData","WrappedComponent","props","query","render","data","Signatures","mt","sx","flexWrap","allGoogleSpreadsheetSheet1","edges","map","node","display","flex","pr","key","id","name","Count","allGoogleSpreadsheetSheet2","count","layoutProps","_frontmatter","MDXContent","components","mdxType","parentName","src","isMDXComponent","List","children","mb","ul","margin","padding","li","listStyle","a","variant","Homepage","posts","useMinimalBlogConfig","basePath","blogPath","p","fontSize","HomepageComponent","allPost","nodes"],"mappings":"o6wBAuBMA,EAAW,SAAAC,GAAgB,OAAI,SAAAC,GAAK,OACxC,kBAAC,cAAD,CACEC,MArBO,aAsBPC,OAAQ,SAAAC,GAAI,OAAI,kBAACJ,EAAD,iBAAsBC,EAAtB,CAA6BG,KAAMA,MAFrD,WAMWC,EAAaN,GAAS,YAAe,IAAZK,EAAW,EAAXA,KACpC,OACE,2BACE,kBAAC,IAAD,CAAME,GAAI,EAAGC,GAAI,CAAEC,SAAU,SAC1BJ,EAAKK,2BAA2BC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACzC,kBAAC,IAAD,CAAKC,QAAS,OAAQC,KAAM,OAAQC,GAAI,EAAGC,IAAKJ,EAAKK,IAClDL,EAAKM,cAQLC,EAAQpB,GAAS,gBAAGK,EAAH,EAAGA,KAAH,OAC5B,kBAAC,WAAD,KAAWA,EAAKgB,2BAA2BV,MAAM,GAAGE,KAAKS,UCtCpD,IAUDC,EAAc,CAClBC,aAX0B,CAC1B,MAAS,OACT,KAAQ,MAYK,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGxB,E,oIACF,mBACD,OAAO,cALS,UAKT,iBAAeqB,EAAiBrB,EAAhC,CAAuCwB,WAAYA,EAAYC,QAAQ,cAG5E,4GACA,cAAC,IAAD,CAAKpB,IAAK,EAAGoB,QAAQ,QACrB,uBAAG,iCAAGC,WAAW,KAAQ,CACrB,KAAQ,wCADT,kBAAH,yCAEqE,wBAAQA,WAAW,KAAnB,iBAFrE,KAGA,cAAC,IAAD,CAAKrB,GAAI,EAAGoB,QAAQ,QACpB,uCAAoB,cAACP,EAAD,CAAOO,QAAQ,WACnC,cAAC,IAAD,CAAKpB,GAAI,EAAGoB,QAAQ,QACpB,cAACrB,EAAD,CAAYqB,QAAQ,eACpB,cAAC,IAAD,CAAOpB,GAAI,EAAGsB,IAAI,cAAcF,QAAQ,WAK5CF,EAAWK,gBAAiB,ECrCrB,IAODP,EAAc,CAClBC,aAR0B,IAWb,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGxB,E,oIACF,mBACD,OAAO,cALS,UAKT,iBAAeqB,EAAiBrB,EAAhC,CAAuCwB,WAAYA,EAAYC,QAAQ,eAKhFF,EAAWK,gBAAiB,ECjB5B,IAaeC,EAbF,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACX,uBACExB,GAAI,CACFyB,GAAI,CAAC,EAAG,EAAG,GACXC,GAAI,CAAEC,OAAQ,EAAGC,QAAS,GAC1BC,GAAI,CAAEC,UAAW,OAAQL,GAAI,GAC7BM,EAAG,CAAEC,QAAS,oBAGfR,I,YCwBUS,EAfE,SAAC,GAA0B,EAAxBC,MAAwB,MACXC,cADW,EAClCC,SADkC,EACxBC,SAElB,OACE,YAAC,IAAD,KACE,uBAASrC,GAAI,CAAEyB,GAAI,CAAC,EAAG,EAAG,GAAIa,EAAG,CAAEC,SAAU,CAAC,EAAG,EAAG,GAAIxC,GAAI,KAC1D,YAAC,EAAD,OAEF,YAAC,EAAD,KACE,YAAC,EAAD,SClCR,sCAEeyC,UCOA,YAAqB,IAC1BC,EAD0B,EAAlB5C,KACR4C,QAER,OAAO,kBAAC,EAAD,CAAUP,MAAOO,EAAQC,SDVnBF,IAEF7C,EAAQ","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-008c5e5ed1327d7029be.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport { Flex, Box } from \"@theme-ui/components\";\n\nconst query = graphql`\n  query {\n    allGoogleSpreadsheetSheet1 {\n      edges {\n        node {\n          name\n        }\n      }\n    }\n    allGoogleSpreadsheetSheet2 {\n      edges {\n        node {\n          count\n        }\n      }\n    }\n  }\n`;\n\nconst withData = WrappedComponent => props => (\n  <StaticQuery\n    query={query}\n    render={data => <WrappedComponent {...props} data={data} />}\n  />\n);\n\nexport const Signatures = withData(({ data }) => {\n  return (\n    <p>\n      <Flex mt={4} sx={{ flexWrap: \"wrap\" }}>\n        {data.allGoogleSpreadsheetSheet1.edges.map(({ node }) => (\n          <Box display={\"flex\"} flex={\"auto\"} pr={4} key={node.id}>\n            {node.name}\n          </Box>\n        ))}\n      </Flex>\n    </p>\n  );\n});\n\nexport const Count = withData(({ data }) => (\n  <Fragment>{data.allGoogleSpreadsheetSheet2.edges[0].node.count}</Fragment>\n));\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport { Image, Box, Text } from \"@theme-ui/components\";\nimport { Signatures, Count } from './signatures';\nexport const _frontmatter = {\n  \"title\": \"Main\",\n  \"slug\": \"/\"\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Artists4Bernie is an artist-led campaign to endorse Bernie Sanders for President.`}</p>\n    <Box mt={-3} mdxType=\"Box\" />\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://forms.gle/D12ZuAnur5dRtY5z5\"\n      }}>{`Sign your name`}</a>{` and join us to build a better future `}<strong parentName=\"p\">{`for our world`}</strong>{`.`}</p>\n    <Box mt={5} mdxType=\"Box\" />\n    <h1>{`Signatures: `}<Count mdxType=\"Count\" /></h1>\n    <Box mt={5} mdxType=\"Box\" />\n    <Signatures mdxType=\"Signatures\" />\n    <Image mt={6} src=\"/bernie.png\" mdxType=\"Image\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\r\nimport React from \"react\"\r\nimport { jsx } from \"theme-ui\"\r\n\r\ntype ListProps = {\r\n  children: React.ReactNode\r\n}\r\n\r\nconst List = ({ children }: ListProps) => (\r\n  <section\r\n    sx={{\r\n      mb: [5, 5, 6],\r\n      ul: { margin: 0, padding: 0 },\r\n      li: { listStyle: `none`, mb: 3 },\r\n      a: { variant: `links.listItem` },\r\n    }}\r\n  >\r\n    {children}\r\n  </section>\r\n)\r\n\r\nexport default List\r\n","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport { Link } from \"gatsby\"\r\nimport Layout from \"./layout\"\r\n// @ts-ignore\r\nimport Hero from \"../texts/hero\"\r\n// @ts-ignore\r\nimport Bottom from \"../texts/bottom\"\r\nimport Title from \"./title\"\r\nimport Listing from \"./listing\"\r\nimport List from \"./list\"\r\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\r\nimport replaceSlashes from \"../utils/replaceSlashes\"\r\n\r\ntype PostsProps = {\r\n  posts: {\r\n    slug: string\r\n    title: string\r\n    date: string\r\n    tags?: {\r\n      name: string\r\n      slug: string\r\n    }[]\r\n  }[]\r\n}\r\n\r\nconst Homepage = ({ posts }: PostsProps) => {\r\n  const { basePath, blogPath } = useMinimalBlogConfig()\r\n\r\n  return (\r\n    <Layout>\r\n      <section sx={{ mb: [5, 6, 7], p: { fontSize: [1, 2, 3], mt: 2 } }}>\r\n        <Hero />\r\n      </section>\r\n      <List>\r\n        <Bottom />\r\n      </List>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Homepage\r\n","import { graphql } from \"gatsby\"\r\nimport HomepageComponent from \"../components/homepage\"\r\n\r\nexport default HomepageComponent\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allPost(sort: { fields: date, order: DESC }, limit: 3) {\r\n      nodes {\r\n        slug\r\n        title\r\n        date(formatString: \"DD.MM.YYYY\")\r\n        tags {\r\n          name\r\n          slug\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport Homepage from \"../../../components/homepage\"\r\n\r\ntype Props = {\r\n  data: {\r\n    allPost: any\r\n    [key: string]: string\r\n  }\r\n}\r\n\r\nexport default ({ data }: Props) => {\r\n  const { allPost } = data\r\n\r\n  return <Homepage posts={allPost.nodes} />\r\n}\r\n"],"sourceRoot":""}