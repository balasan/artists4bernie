{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/item-tags.tsx","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/post.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx"],"names":["MDXRenderer","require","module","ItemTags","tags","useMinimalBlogConfig","tagsPath","basePath","Fragment","map","tag","i","key","slug","a","as","Link","to","replaceSlashes","name","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","Object","result","Function","call","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","values","fn","shadow","v","Post","post","data","title","description","excerpt","image","banner","childImageSharp","resize","src","undefined","h2","sx","color","mt","fontSize","date","timeToRead","my","boxShadow","join","body","PostComponent","query"],"mappings":"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","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-f7bb452bb0e783e1e87a.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","import React from \"react\"\r\nimport { Styled } from \"theme-ui\"\r\nimport { Link } from \"gatsby\"\r\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\r\nimport replaceSlashes from \"../utils/replaceSlashes\"\r\n\r\ntype TagsProps = {\r\n  tags: {\r\n    name: string\r\n    slug: string\r\n  }[]\r\n}\r\n\r\nconst ItemTags = ({ tags }: TagsProps) => {\r\n  const { tagsPath, basePath } = useMinimalBlogConfig()\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {tags.map((tag, i) => (\r\n        <React.Fragment key={tag.slug}>\r\n          {!!i && `, `}\r\n          <Styled.a as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\r\n            {tag.name}\r\n          </Styled.a>\r\n        </React.Fragment>\r\n      ))}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ItemTags\r\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","/** @jsx jsx */\r\nimport { jsx, Styled } from \"theme-ui\"\r\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\r\nimport React from \"react\"\r\nimport Layout from \"./layout\"\r\nimport ItemTags from \"./item-tags\"\r\nimport SEO from \"./seo\"\r\n\r\ntype PostProps = {\r\n  data: {\r\n    post: {\r\n      slug: string\r\n      title: string\r\n      date: string\r\n      tags?: {\r\n        name: string\r\n        slug: string\r\n      }[]\r\n      description?: string\r\n      body: string\r\n      excerpt: string\r\n      timeToRead: number\r\n      banner?: {\r\n        childImageSharp: {\r\n          resize: {\r\n            src: string\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst px = [`32px`, `16px`, `8px`, `4px`]\r\nconst shadow = px.map(v => `rgba(0, 0, 0, 0.15) 0px ${v} ${v} 0px`)\r\n\r\nconst Post = ({ data: { post } }: PostProps) => (\r\n  <Layout>\r\n    <SEO\r\n      title={post.title}\r\n      description={post.description ? post.description : post.excerpt}\r\n      image={post.banner ? post.banner.childImageSharp.resize.src : undefined}\r\n    />\r\n    <Styled.h2>{post.title}</Styled.h2>\r\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\r\n      <time>{post.date}</time>\r\n      {post.tags && (\r\n        <React.Fragment>\r\n          {` — `}\r\n          <ItemTags tags={post.tags} />\r\n        </React.Fragment>\r\n      )}\r\n      {` — `}\r\n      <span>{post.timeToRead} min read</span>\r\n    </p>\r\n    <section sx={{ my: 5, \".gatsby-resp-image-wrapper\": { my: [4, 4, 5], boxShadow: shadow.join(`, `) } }}>\r\n      <MDXRenderer>{post.body}</MDXRenderer>\r\n    </section>\r\n  </Layout>\r\n)\r\n\r\nexport default Post\r\n","import { graphql } from \"gatsby\"\r\nimport PostComponent from \"../components/post\"\r\n\r\nexport default PostComponent\r\n\r\nexport const query = graphql`\r\n  query($slug: String!) {\r\n    post(slug: { eq: $slug }) {\r\n      slug\r\n      title\r\n      date(formatString: \"DD.MM.YYYY\")\r\n      tags {\r\n        name\r\n        slug\r\n      }\r\n      description\r\n      body\r\n      excerpt\r\n      timeToRead\r\n      banner {\r\n        childImageSharp {\r\n          resize(width: 1200, quality: 90) {\r\n            src\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport Post from \"../../../components/post\"\r\n\r\ntype Props = {\r\n  data: {\r\n    post: any\r\n    [key: string]: any\r\n  }\r\n}\r\n\r\nexport default ({ data }: Props) => {\r\n  const { post } = data\r\n\r\n  return <Post data={{ ...data, post }} />\r\n}\r\n"],"sourceRoot":""}