{"version":3,"sources":["webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/texts/signatures.js","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/list.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/homepage.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx"],"names":["withData","WrappedComponent","props","query","render","data","Signatures","mt","allGoogleSpreadsheetSheet1","edges","map","node","pr","key","id","name","Count","allGoogleSpreadsheetSheet2","count","layoutProps","_frontmatter","MDXContent","components","mdxType","href","target","sx","display","backgroundColor","color","textAlign","fontWeight","maxWidth","padding","borderTop","paddingTop","isMDXComponent","List","children","mb","ul","margin","li","listStyle","a","variant","Homepage","posts","useMinimalBlogConfig","basePath","blogPath","p","fontSize","lineHeight","m","ml","listStyleType","pl","pt","pb","width","HomepageComponent","allPost","nodes"],"mappings":"iu7NAsBMA,EAAW,SAAAC,GAAgB,OAAI,SAAAC,GAAK,OACxC,kBAAC,cAAD,CACEC,MArBO,aAsBPC,OAAQ,SAAAC,GAAI,OAAI,kBAACJ,EAAD,iBAAsBC,EAAtB,CAA6BG,KAAMA,MAFrD,WAMWC,EAAaN,GAAS,YAAe,IAAZK,EAAW,EAAXA,KACpC,OACE,wBAAIE,GAAI,GACLF,EAAKG,2BAA2BC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACzC,wBAAIC,GAAI,EAAGC,IAAKF,EAAKG,IAClBH,EAAKI,KACN,qCAOGC,EAAQhB,GAAS,gBAAGK,EAAH,EAAGA,KAAH,OAC5B,kBAAC,WAAD,KAAWA,EAAKY,2BAA2BR,MAAM,GAAGE,KAAKO,UCpCpD,IAUDC,EAAc,CAClBC,aAX0B,CAC1B,MAAS,OACT,KAAQ,MAYK,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGpB,E,oIACF,mBACD,OAAO,cALS,UAKT,iBAAeiB,EAAiBjB,EAAhC,CAAuCoB,WAAYA,EAAYC,QAAQ,cAE5E,2TAAwS,mBAAGC,KAAK,sCAAsCC,OAAO,UAArD,kBAAxS,0CACA,cAAC,IAAD,CAAKlB,IAAK,EAAGgB,QAAQ,QACrB,cAAC,IAAD,CAAKhB,GAAI,EAAGgB,QAAQ,QACpB,cAAC,IAAD,CAAKhB,GAAI,EAAGgB,QAAQ,QACpB,cAAC,IAAD,CAAMC,KAAM,sCAAuCC,OAAO,SAASC,GAAI,CACrEC,QAAS,QACTC,gBAAiB,UACjBC,MAAO,QACPC,UAAW,SACXC,WAAY,SACZC,SAAU,QACVC,QAAS,QACRV,QAAQ,QARX,kBASA,cAAC,IAAD,CAAKhB,GAAI,EAAGmB,GAAI,CACdQ,UAAW,kBACXC,WAAY,QACXZ,QAAQ,QACX,uCAAoB,cAACP,EAAD,CAAOO,QAAQ,WACnC,cAAC,IAAD,CAAKhB,GAAI,EAAGgB,QAAQ,QACpB,cAACjB,EAAD,CAAYiB,QAAQ,gBAKxBF,EAAWe,gBAAiB,EC9CrB,IAODjB,EAAc,CAClBC,aAR0B,IAWb,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGpB,E,oIACF,mBACD,OAAO,cALS,UAKT,iBAAeiB,EAAiBjB,EAAhC,CAAuCoB,WAAYA,EAAYC,QAAQ,eAKhFF,EAAWe,gBAAiB,ECjB5B,IAaeC,EAbF,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACX,uBACEZ,GAAI,CACFa,GAAI,CAAC,EAAG,EAAG,GACXC,GAAI,CAAEC,OAAQ,EAAGR,QAAS,GAC1BS,GAAI,CAAEC,UAAW,OAAQJ,GAAI,GAC7BK,EAAG,CAAEC,QAAS,oBAGfP,I,YCwBUQ,EAfE,SAAC,GAA0B,EAAxBC,MAAwB,MACXC,cADW,EAClCC,SADkC,EACxBC,SAElB,OACE,YAAC,IAAD,KACE,uBAASxB,GAAI,CAAEa,GAAI,CAAC,EAAG,EAAG,GAAIY,EAAG,CAAEC,SAAU,CAAC,EAAG,EAAG,GAAI7C,GAAI,EAAG8C,WAAY,MAAQb,GAAG,CAAEc,EAAG,EAAGH,EAAG,GAAIT,GAAI,CAAE,WAAY,CAACa,GAAI,GAAIC,cAAe,OAAQC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAIC,MAAO,CAAC,MAAD,WAAmBjC,QAAS,kBAC9M,YAAC,EAAD,OAEF,YAAC,EAAD,KACE,YAAC,EAAD,SClCR,sCAEekC,UCOA,YAAqB,IAC1BC,EAD0B,EAAlBzD,KACRyD,QAER,OAAO,kBAAC,EAAD,CAAUf,MAAOe,EAAQC,SDVnBF,IAEF1D,EAAQ","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-ce9a87174f9b70923baf.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nconst query = graphql`\n  query {\n    allGoogleSpreadsheetSheet1 {\n      edges {\n        node {\n          name\n        }\n      }\n    }\n    allGoogleSpreadsheetSheet2 {\n      edges {\n        node {\n          count\n        }\n      }\n    }\n  }\n`;\n\nconst withData = WrappedComponent => props => (\n  <StaticQuery\n    query={query}\n    render={data => <WrappedComponent {...props} data={data} />}\n  />\n);\n\nexport const Signatures = withData(({ data }) => {\n  return (\n    <ul mt={4}>\n      {data.allGoogleSpreadsheetSheet1.edges.map(({ node }) => (\n        <li pr={4} key={node.id}>\n          {node.name}\n          <hr />\n        </li>\n      ))}\n    </ul>\n  );\n});\n\nexport const Count = withData(({ data }) => (\n  <Fragment>{data.allGoogleSpreadsheetSheet2.edges[0].node.count}</Fragment>\n));\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport { Image, Box, Text, Link } from \"@theme-ui/components\";\nimport { Signatures, Count } from './signatures';\nexport const _frontmatter = {\n  \"title\": \"Main\",\n  \"slug\": \"/\"\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`Artists4Bernie is an artist-led campaign. We represent a diverse coalition of people that work within art and culture from around the world, and with this letter, we would like to declare our support for Senator Bernie Sanders and endorse his candidacy for President of the United States. `}<a href=\"https://forms.gle/D12ZuAnur5dRtY5z5\" target=\"_blank\">{`Sign your name`}</a>{` and join us to build a better future.`}</p>\n    <Box mt={-4} mdxType=\"Box\" />\n    <Box mt={4} mdxType=\"Box\" />\n    <Box mt={5} mdxType=\"Box\" />\n    <Link href={'https://forms.gle/D12ZuAnur5dRtY5z5'} target=\"_blank\" sx={{\n      display: 'block',\n      backgroundColor: '#ff0000',\n      color: 'black',\n      textAlign: 'center',\n      fontWeight: 'medium',\n      maxWidth: '320px',\n      padding: '16px'\n    }} mdxType=\"Link\">Sign your name</Link>\n    <Box mt={5} sx={{\n      borderTop: '1px white solid',\n      paddingTop: '32px'\n    }} mdxType=\"Box\" />\n    <h1>{`Signatures: `}<Count mdxType=\"Count\" /></h1>\n    <Box mt={5} mdxType=\"Box\" />\n    <Signatures mdxType=\"Signatures\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\r\nimport React from \"react\"\r\nimport { jsx } from \"theme-ui\"\r\n\r\ntype ListProps = {\r\n  children: React.ReactNode\r\n}\r\n\r\nconst List = ({ children }: ListProps) => (\r\n  <section\r\n    sx={{\r\n      mb: [5, 5, 6],\r\n      ul: { margin: 0, padding: 0 },\r\n      li: { listStyle: `none`, mb: 3 },\r\n      a: { variant: `links.listItem` },\r\n    }}\r\n  >\r\n    {children}\r\n  </section>\r\n)\r\n\r\nexport default List\r\n","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport { Link } from \"gatsby\"\r\nimport Layout from \"./layout\"\r\n// @ts-ignore\r\nimport Hero from \"../texts/hero\"\r\n// @ts-ignore\r\nimport Bottom from \"../texts/bottom\"\r\nimport Title from \"./title\"\r\nimport Listing from \"./listing\"\r\nimport List from \"./list\"\r\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\r\nimport replaceSlashes from \"../utils/replaceSlashes\"\r\n\r\ntype PostsProps = {\r\n  posts: {\r\n    slug: string\r\n    title: string\r\n    date: string\r\n    tags?: {\r\n      name: string\r\n      slug: string\r\n    }[]\r\n  }[]\r\n}\r\n\r\nconst Homepage = ({ posts }: PostsProps) => {\r\n  const { basePath, blogPath } = useMinimalBlogConfig()\r\n\r\n  return (\r\n    <Layout>\r\n      <section sx={{ mb: [5, 6, 7], p: { fontSize: [1, 2, 3], mt: 2, lineHeight: 1.33 }, ul:{ m: 0, p: 0}, li: { \"::before\": {ml: 4}, listStyleType: `none`, pl: 0, pt: 1, pb: 1,  width: [`50%`,`33.333%`], display: `inline-block`,} }}>\r\n        <Hero />\r\n      </section>\r\n      <List>\r\n        <Bottom />\r\n      </List>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Homepage\r\n","import { graphql } from \"gatsby\"\r\nimport HomepageComponent from \"../components/homepage\"\r\n\r\nexport default HomepageComponent\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allPost(sort: { fields: date, order: DESC }, limit: 3) {\r\n      nodes {\r\n        slug\r\n        title\r\n        date(formatString: \"DD.MM.YYYY\")\r\n        tags {\r\n          name\r\n          slug\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport Homepage from \"../../../components/homepage\"\r\n\r\ntype Props = {\r\n  data: {\r\n    allPost: any\r\n    [key: string]: string\r\n  }\r\n}\r\n\r\nexport default ({ data }: Props) => {\r\n  const { allPost } = data\r\n\r\n  return <Homepage posts={allPost.nodes} />\r\n}\r\n"],"sourceRoot":""}